C51 COMPILER V9.60.7.0   USB                                                               08/08/2024 19:00:32 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE USB
OBJECT MODULE PLACED IN .\obj\usb.obj
COMPILER INVOKED BY: D:\Develop\Keil_v5\C51\BIN\C51.EXE src\usb.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\ob
                    -j\usb.lst) TABS(2) OBJECT(.\obj\usb.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCAI.com ---------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
  10          /* --- QQ:  800003751 -------------------------------------------------*/
  11          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  12          /*---------------------------------------------------------------------*/
  13          
  14          #include "stc.h"
  15          #include "usb.h"
  16          #include "usb_req_std.h"
  17          #include "usb_req_class.h"
  18          #include "usb_req_vendor.h"
  19          #include "util.h"
  20          
  21          BYTE DeviceState;
  22          SETUP Setup;
  23          EPSTATE Ep0State;
  24          BYTE InEpState;
  25          BYTE OutEpState;
  26          BYTE xdata UsbBuffer[256];
  27          
  28          void usb_init()
  29          {
  30   1          P3M0 &= ~0x03;
  31   1          P3M1 |= 0x03;
  32   1      
  33   1          IRC48MCR = 0x80;
  34   1          while (!(IRC48MCR & 0x01));
  35   1      
  36   1          USBCLK = 0x00;
  37   1          USBCON = 0x90;
  38   1      
  39   1          usb_write_reg(FADDR, 0x00);
  40   1          usb_write_reg(POWER, 0x09);
  41   1          usb_write_reg(INTRIN1E, 0x3f);
  42   1          usb_write_reg(INTROUT1E, 0x3f);
  43   1          usb_write_reg(INTRUSBE, 0x07);
  44   1          usb_write_reg(POWER, 0x01);
  45   1      
  46   1          DeviceState = DEVSTATE_DEFAULT;
  47   1          Ep0State.bState = EPSTATE_IDLE;
  48   1          InEpState = 0x00;
  49   1          OutEpState = 0x00;
  50   1      
  51   1          IE2 |= 0x80;    //EUSB = 1;
  52   1      }
  53          
  54          BYTE usb_read_reg(BYTE addr)
C51 COMPILER V9.60.7.0   USB                                                               08/08/2024 19:00:32 PAGE 2   

  55          {
  56   1        BYTE dat;
  57   1      
  58   1        while (USBADR & 0x80);
  59   1        USBADR = addr | 0x80;
  60   1        while (USBADR & 0x80);
  61   1        dat = USBDAT;
  62   1      
  63   1        return dat;
  64   1      }
  65          
  66          void usb_write_reg(BYTE addr, BYTE dat)
  67          {
  68   1        while (USBADR & 0x80);
  69   1        USBADR = addr & 0x7f;
  70   1        USBDAT = dat;
  71   1      }
  72          
  73          BYTE usb_read_fifo(BYTE fifo, BYTE *pdat)
  74          {
  75   1          BYTE cnt;
  76   1          BYTE ret;
  77   1      
  78   1          ret = cnt = usb_read_reg(COUNT0);
  79   1          while (cnt--)
  80   1          {
  81   2            *pdat++ = usb_read_reg(fifo);
  82   2          }
  83   1      
  84   1          return ret;
  85   1      }
  86          
  87          void usb_write_fifo(BYTE fifo, BYTE *pdat, BYTE cnt)
  88          {
  89   1        while (cnt--)
  90   1        {
  91   2              usb_write_reg(fifo, *pdat++);
  92   2          }
  93   1      }
  94          
  95          void usb_isr() interrupt 25
  96          {
  97   1          BYTE intrusb;
  98   1          BYTE intrin;
  99   1          BYTE introut;
 100   1      
 101   1          intrusb = usb_read_reg(INTRUSB);
 102   1          intrin = usb_read_reg(INTRIN1);
 103   1          introut = usb_read_reg(INTROUT1);
 104   1      
 105   1          if (intrusb & RSUIF) usb_resume();
 106   1          if (intrusb & RSTIF) usb_reset();
 107   1      
 108   1          if (intrin & EP0IF) usb_setup();
 109   1      
 110   1      #ifdef EN_EP1IN
 111   1          if (intrin & EP1INIF) usb_in_ep1();
 112   1      #endif
 113   1      #ifdef EN_EP2IN
                  if (intrin & EP2INIF) usb_in_ep2();
              #endif
 116   1      #ifdef EN_EP3IN
C51 COMPILER V9.60.7.0   USB                                                               08/08/2024 19:00:32 PAGE 3   

                  if (intrin & EP3INIF) usb_in_ep3();
              #endif
 119   1      #ifdef EN_EP4IN
                  if (intrin & EP4INIF) usb_in_ep4();
              #endif
 122   1      #ifdef EN_EP5IN
                  if (intrin & EP5INIF) usb_in_ep5();
              #endif
 125   1      
 126   1      #ifdef EN_EP1OUT
 127   1          if (introut & EP1OUTIF) usb_out_ep1();
 128   1      #endif
 129   1      #ifdef EN_EP2OUT
                  if (introut & EP2OUTIF) usb_out_ep2();
              #endif
 132   1      #ifdef EN_EP3OUT
                  if (introut & EP3OUTIF) usb_out_ep3();
              #endif
 135   1      #ifdef EN_EP4OUT
                  if (introut & EP4OUTIF) usb_out_ep4();
              #endif
 138   1      #ifdef EN_EP5OUT
                  if (introut & EP5OUTIF) usb_out_ep5();
              #endif
 141   1      
 142   1          if (intrusb & SUSIF) usb_suspend();
 143   1      }
 144          
 145          void usb_resume()
 146          {
 147   1      }
 148          
 149          void usb_reset()
 150          {
 151   1          usb_write_reg(FADDR, 0x00);
 152   1          DeviceState = DEVSTATE_DEFAULT;
 153   1          Ep0State.bState = EPSTATE_IDLE;
 154   1      
 155   1      #ifdef EN_EP1IN
 156   1          usb_write_reg(INDEX, 1);
 157   1          usb_write_reg(INCSR1, INCLRDT | INFLUSH);
 158   1      #endif
 159   1      #ifdef EN_EP2IN
                  usb_write_reg(INDEX, 2);
                  usb_write_reg(INCSR1, INCLRDT | INFLUSH);
              #endif
 163   1      #ifdef EN_EP3IN
                  usb_write_reg(INDEX, 3);
                  usb_write_reg(INCSR1, INCLRDT | INFLUSH);
              #endif
 167   1      #ifdef EN_EP4IN
                  usb_write_reg(INDEX, 4);
                  usb_write_reg(INCSR1, INCLRDT | INFLUSH);
              #endif
 171   1      #ifdef EN_EP5IN
                  usb_write_reg(INDEX, 5);
                  usb_write_reg(INCSR1, INCLRDT | INFLUSH);
              #endif
 175   1      #ifdef EN_EP1OUT
 176   1          usb_write_reg(INDEX, 1);
 177   1          usb_write_reg(OUTCSR1, OUTCLRDT | OUTFLUSH);
 178   1      #endif
C51 COMPILER V9.60.7.0   USB                                                               08/08/2024 19:00:32 PAGE 4   

 179   1      #ifdef EN_EP2OUT
                  usb_write_reg(INDEX, 2);
                  usb_write_reg(OUTCSR1, OUTCLRDT | OUTFLUSH);
              #endif
 183   1      #ifdef EN_EP3OUT
                  usb_write_reg(INDEX, 3);
                  usb_write_reg(OUTCSR1, OUTCLRDT | OUTFLUSH);
              #endif
 187   1      #ifdef EN_EP4OUT
                  usb_write_reg(INDEX, 4);
                  usb_write_reg(OUTCSR1, OUTCLRDT | OUTFLUSH);
              #endif
 191   1      #ifdef EN_EP5OUT
                  usb_write_reg(INDEX, 5);
                  usb_write_reg(OUTCSR1, OUTCLRDT | OUTFLUSH);
              #endif
 195   1          usb_write_reg(INDEX, 0);
 196   1      }
 197          
 198          void usb_suspend()
 199          {
 200   1      }
 201          
 202          void usb_setup()
 203          {
 204   1          BYTE csr;
 205   1      
 206   1          usb_write_reg(INDEX, 0);
 207   1          csr = usb_read_reg(CSR0);
 208   1      
 209   1          if (csr & STSTL)
 210   1          {
 211   2              usb_write_reg(CSR0, csr & ~STSTL);  //对自己写 0 清除标志位
 212   2              Ep0State.bState = EPSTATE_IDLE;
 213   2          }
 214   1          if (csr & SUEND)
 215   1          {
 216   2              usb_write_reg(CSR0, csr | SSUEND);  //对 SSUEND 写 1 清除 SUEND 标志位
 217   2          }
 218   1      
 219   1          switch (Ep0State.bState)
 220   1          {
 221   2          case EPSTATE_IDLE:
 222   2              if (csr & OPRDY)
 223   2              {
 224   3                  usb_read_fifo(FIFO0, (BYTE *)&Setup);
 225   3                  Setup.wLength = reverse2(Setup.wLength);
 226   3                  switch (Setup.bmRequestType & REQUEST_MASK)
 227   3                  {
 228   4                  case STANDARD_REQUEST:
 229   4                      usb_req_std();
 230   4                      break;
 231   4                  case CLASS_REQUEST:
 232   4                      usb_req_class();
 233   4                      break;
 234   4                  case VENDOR_REQUEST:
 235   4                      usb_req_vendor();
 236   4                      break;
 237   4                  default:
 238   4                      usb_setup_stall();
 239   4                      return;
 240   4                  }
C51 COMPILER V9.60.7.0   USB                                                               08/08/2024 19:00:32 PAGE 5   

 241   3              }
 242   2              break;
 243   2          case EPSTATE_DATAIN:
 244   2              usb_ctrl_in();
 245   2              break;
 246   2          case EPSTATE_DATAOUT:
 247   2              usb_ctrl_out();
 248   2              break;
 249   2          }
 250   1      }
 251          
 252          void usb_setup_stall()
 253          {
 254   1          Ep0State.bState = EPSTATE_STALL;
 255   1          usb_write_reg(CSR0, SOPRDY | SDSTL);
 256   1      }
 257          
 258          void usb_setup_in()
 259          {
 260   1          Ep0State.bState = EPSTATE_DATAIN;
 261   1          usb_write_reg(CSR0, SOPRDY);
 262   1          usb_ctrl_in();
 263   1      }
 264          
 265          void usb_setup_out()
 266          {
 267   1          Ep0State.bState = EPSTATE_DATAOUT;
 268   1          usb_write_reg(CSR0, SOPRDY);
 269   1      }
 270          
 271          void usb_setup_status()
 272          {
 273   1          Ep0State.bState = EPSTATE_IDLE;
 274   1          usb_write_reg(CSR0, SOPRDY | DATEND);
 275   1      }
 276          
 277          void usb_ctrl_in()
 278          {
 279   1          BYTE csr;
 280   1          BYTE cnt;
 281   1      
 282   1          usb_write_reg(INDEX, 0);
 283   1          csr = usb_read_reg(CSR0);
 284   1          if (csr & IPRDY) return;
 285   1      
 286   1          cnt = Ep0State.wSize > EP0_SIZE ? EP0_SIZE : Ep0State.wSize;
 287   1          usb_write_fifo(FIFO0, Ep0State.pData, cnt);
 288   1          Ep0State.wSize -= cnt;
 289   1          Ep0State.pData += cnt;
 290   1          if (Ep0State.wSize == 0)
 291   1          {
 292   2              usb_write_reg(CSR0, IPRDY | DATEND);
 293   2              Ep0State.bState = EPSTATE_IDLE;
 294   2          }
 295   1          else
 296   1          {
 297   2              usb_write_reg(CSR0, IPRDY);
 298   2          }
 299   1      }
 300          
 301          void usb_ctrl_out()
 302          {
C51 COMPILER V9.60.7.0   USB                                                               08/08/2024 19:00:32 PAGE 6   

 303   1          BYTE csr;
 304   1          BYTE cnt;
 305   1      
 306   1          usb_write_reg(INDEX, 0);
 307   1          csr = usb_read_reg(CSR0);
 308   1          if (!(csr & OPRDY)) return;
 309   1      
 310   1          cnt = usb_read_fifo(FIFO0, Ep0State.pData);
 311   1          Ep0State.wSize -= cnt;
 312   1          Ep0State.pData += cnt;
 313   1          if (Ep0State.wSize == 0)
 314   1          {
 315   2              usb_write_reg(CSR0, SOPRDY | DATEND);
 316   2              Ep0State.bState = EPSTATE_IDLE;
 317   2          }
 318   1          else
 319   1          {
 320   2              usb_write_reg(CSR0, SOPRDY);
 321   2          }
 322   1      }
 323          
 324          void usb_bulk_intr_in(BYTE *pData, BYTE bSize, BYTE ep)
 325          {
 326   1          usb_write_fifo((BYTE)(FIFO0 + ep), pData, bSize);
 327   1          usb_write_reg(INCSR1, INIPRDY);
 328   1      }
 329          
 330          BYTE usb_bulk_intr_out(BYTE *pData, BYTE ep)
 331          {
 332   1          BYTE cnt;
 333   1      
 334   1          cnt = usb_read_fifo((BYTE)(FIFO0 + ep), pData);
 335   1          usb_write_reg(OUTCSR1, 0);
 336   1      
 337   1          return cnt;
 338   1      }
 339          
 340          #ifdef EN_EP1IN
 341          void usb_in_ep1()
 342          {
 343   1          BYTE csr;
 344   1      
 345   1          usb_write_reg(INDEX, 1);
 346   1          csr = usb_read_reg(INCSR1);
 347   1          if (csr & INSTSTL)
 348   1          {
 349   2              usb_write_reg(INCSR1, INCLRDT);
 350   2          }
 351   1          if (csr & INUNDRUN)
 352   1          {
 353   2              usb_write_reg(INCSR1, 0);
 354   2          }
 355   1      }
 356          #endif
 357          
 358          #ifdef EN_EP2IN
              void usb_in_ep2()
              {
                  BYTE csr;
              
                  usb_write_reg(INDEX, 2);
                  csr = usb_read_reg(INCSR1);
C51 COMPILER V9.60.7.0   USB                                                               08/08/2024 19:00:32 PAGE 7   

                  if (csr & INSTSTL)
                  {
                      usb_write_reg(INCSR1, INCLRDT);
                  }
                  if (csr & INUNDRUN)
                  {
                      usb_write_reg(INCSR1, 0);
                  }
              }
              #endif
 375          
 376          #ifdef EN_EP3IN
              void usb_in_ep3()
              {
                  BYTE csr;
              
                  usb_write_reg(INDEX, 3);
                  csr = usb_read_reg(INCSR1);
                  if (csr & INSTSTL)
                  {
                      usb_write_reg(INCSR1, INCLRDT);
                  }
                  if (csr & INUNDRUN)
                  {
                      usb_write_reg(INCSR1, 0);
                  }
              }
              #endif
 393          
 394          #ifdef EN_EP4IN
              void usb_in_ep4()
              {
                  BYTE csr;
              
                  usb_write_reg(INDEX, 4);
                  csr = usb_read_reg(INCSR1);
                  if (csr & INSTSTL)
                  {
                      usb_write_reg(INCSR1, INCLRDT);
                  }
                  if (csr & INUNDRUN)
                  {
                      usb_write_reg(INCSR1, 0);
                  }
              }
              #endif
 411          
 412          #ifdef EN_EP5IN
              void usb_in_ep5()
              {
                  BYTE csr;
              
                  usb_write_reg(INDEX, 5);
                  csr = usb_read_reg(INCSR1);
                  if (csr & INSTSTL)
                  {
                      usb_write_reg(INCSR1, INCLRDT);
                  }
                  if (csr & INUNDRUN)
                  {
                      usb_write_reg(INCSR1, 0);
                  }
C51 COMPILER V9.60.7.0   USB                                                               08/08/2024 19:00:32 PAGE 8   

              }
              #endif
 429          
 430          #ifdef EN_EP1OUT
 431          void usb_out_ep1()
 432          {
 433   1          BYTE csr;
 434   1      
 435   1          usb_write_reg(INDEX, 1);
 436   1          csr = usb_read_reg(OUTCSR1);
 437   1          if (csr & OUTSTSTL)
 438   1          {
 439   2              usb_write_reg(OUTCSR1, OUTCLRDT);
 440   2          }
 441   1          if (csr & OUTOPRDY)
 442   1          {
 443   2              usb_bulk_intr_in(UsbBuffer, usb_bulk_intr_out(UsbBuffer, 1), 1);    //功能测试,原路返回
 444   2          }
 445   1      }
 446          #endif
 447          
 448          #ifdef EN_EP2OUT
              void usb_out_ep2()
              {
                  BYTE csr;
              
                  usb_write_reg(INDEX, 2);
                  csr = usb_read_reg(OUTCSR1);
                  if (csr & OUTSTSTL)
                  {
                      usb_write_reg(OUTCSR1, OUTCLRDT);
                  }
                  if (csr & OUTOPRDY)
                  {
                      usb_bulk_intr_out(Ep2OutBuffer, 2);
                  }
              }
              #endif
 465          
 466          #ifdef EN_EP3OUT
              void usb_out_ep3()
              {
                  BYTE csr;
              
                  usb_write_reg(INDEX, 3);
                  csr = usb_read_reg(OUTCSR1);
                  if (csr & OUTSTSTL)
                  {
                      usb_write_reg(OUTCSR1, OUTCLRDT);
                  }
                  if (csr & OUTOPRDY)
                  {
                      usb_bulk_intr_out(Ep3OutBuffer, 3);
                  }
              }
              #endif
 483          
 484          #ifdef EN_EP4OUT
              void usb_out_ep4()
              {
                  BYTE csr;
              
C51 COMPILER V9.60.7.0   USB                                                               08/08/2024 19:00:32 PAGE 9   

                  usb_write_reg(INDEX, 4);
                  csr = usb_read_reg(OUTCSR1);
                  if (csr & OUTSTSTL)
                  {
                      usb_write_reg(OUTCSR1, OUTCLRDT);
                  }
                  if (csr & OUTOPRDY)
                  {
                      usb_bulk_intr_out(Ep4OutBuffer, 4);
                  }
              }
              #endif
 501          
 502          #ifdef EN_EP5OUT
              void usb_out_ep5()
              {
                  BYTE csr;
              
                  usb_write_reg(INDEX, 5);
                  csr = usb_read_reg(OUTCSR1);
                  if (csr & OUTSTSTL)
                  {
                      usb_write_reg(OUTCSR1, OUTCLRDT);
                  }
                  if (csr & OUTOPRDY)
                  {
                      usb_bulk_intr_out(Ep5OutBuffer, 5);
                  }
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    801    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    256    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
