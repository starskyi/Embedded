C51 COMPILER V9.60.7.0   OLED                                                              08/01/2024 12:33:12 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.obj
COMPILER INVOKED BY: D:\Develop\Keil_v5\C51\BIN\C51.EXE SRC\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\SRC) DEBUG OBJECTEX
                    -TEND PRINT(.\oled.lst) TABS(2) OBJECT(oled.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //中景园电子
   4          //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
   5          //
   6          //  文 件 名   : main.c
   7          //  版 本 号   : v2.0
   8          //  作    者   : HuangKai
   9          //  生成日期   : 2018-0101
  10          //  最近修改   : 
  11          //  功能描述   : OLED 4接口演示例程(STC8A8K64SA12系列)
  12          //              说明: 
  13          //              ----------------------------------------------------------------
  14          //              GND    电源地
  15          //              VCC  接5V或3.3v电源
  16          //              D0   P1^4（SCL）
  17          //              D1   P1^3（SDA）
  18          
  19          // 修改历史   :
  20          // 日    期   : 
  21          // 作    者   : HuangKai
  22          // 修改内容   : 创建文件
  23          //版权所有，盗版必究。
  24          //Copyright(C) 中景园电子2018/3/16
  25          //All rights reserved
  26          //******************************************************************************/
  27          #include "oled.h"
  28          #include <sys\sys.h>
*** WARNING C318 IN LINE 28 OF SRC\oled.c: can't open file 'sys\sys.h'
  29          #include <intrins.h>
  30          #include "oledfont.h"    
  31          //#include "delay.h"
  32          //OLED的显存
  33          //存放格式如下.
  34          //[0]0 1 2 3 ... 127  
  35          //[1]0 1 2 3 ... 127  
  36          //[2]0 1 2 3 ... 127  
  37          //[3]0 1 2 3 ... 127  
  38          //[4]0 1 2 3 ... 127  
  39          //[5]0 1 2 3 ... 127  
  40          //[6]0 1 2 3 ... 127  
  41          //[7]0 1 2 3 ... 127         
  42          void delay_ms(unsigned int ms)
  43          {                         
  44   1        unsigned int a;
  45   1        while(ms)
  46   1        {
  47   2          a=1800;
  48   2          while(a--);
  49   2          ms--;
  50   2        }
  51   1        return;
  52   1      }
  53          /**********************************************
C51 COMPILER V9.60.7.0   OLED                                                              08/01/2024 12:33:12 PAGE 2   

  54          //IIC Start
  55          **********************************************/
  56          void IIC_Start()
  57          {
  58   1      
  59   1        OLED_SCLK_Set() ;
  60   1         _nop_();_nop_();_nop_();   
  61   1        OLED_SDIN_Set();
  62   1         _nop_();_nop_();_nop_();   
  63   1        OLED_SDIN_Clr();
  64   1         _nop_();_nop_();_nop_();   
  65   1        OLED_SCLK_Clr();
  66   1         _nop_();_nop_();_nop_();   
  67   1      }
  68          
  69          /**********************************************
  70          //IIC Stop
  71          **********************************************/
  72          void IIC_Stop()
  73          {
  74   1      OLED_SCLK_Set() ;
  75   1         _nop_();_nop_();_nop_();   
  76   1      //  OLED_SCLK_Clr();
  77   1        OLED_SDIN_Clr();
  78   1         _nop_();_nop_();_nop_();   
  79   1        OLED_SDIN_Set();
  80   1         _nop_();_nop_();_nop_();   
  81   1        
  82   1      }
  83          
  84          void IIC_Wait_Ack()
  85          {
  86   1      
  87   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  88   1        //GPIOB->CRH |= 0x00080000;
  89   1      //  OLED_SDA = 1;
  90   1      //  delay_us(1);
  91   1        //OLED_SCL = 1;
  92   1        //delay_us(50000);
  93   1      /*  while(1)
  94   1        {
  95   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  96   1          {
  97   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  98   1            //GPIOB->CRH |= 0x00030000;
  99   1            return;
 100   1          }
 101   1        }
 102   1      */
 103   1        OLED_SCLK_Set() ;
 104   1         _nop_();_nop_();_nop_();   
 105   1        OLED_SCLK_Clr();
 106   1         _nop_();_nop_();_nop_();   
 107   1      }
 108          /**********************************************
 109          // IIC Write byte
 110          **********************************************/
 111          
 112          void Write_IIC_Byte(unsigned char IIC_Byte)
 113          {
 114   1        unsigned char i;
 115   1        unsigned char m,da;
C51 COMPILER V9.60.7.0   OLED                                                              08/01/2024 12:33:12 PAGE 3   

 116   1        da=IIC_Byte;
 117   1         _nop_();_nop_();_nop_();   
 118   1        OLED_SCLK_Clr();
 119   1         _nop_();_nop_();_nop_();   
 120   1        for(i=0;i<8;i++)    
 121   1        {
 122   2            m=da;
 123   2          //  OLED_SCLK_Clr();
 124   2          m=m&0x80;
 125   2          if(m==0x80)
 126   2          {OLED_SDIN_Set();}
 127   2          else OLED_SDIN_Clr();
 128   2           _nop_();_nop_();_nop_();   
 129   2            da=da<<1;
 130   2          OLED_SCLK_Set();
 131   2           _nop_();_nop_();_nop_();   
 132   2          OLED_SCLK_Clr();
 133   2           _nop_();_nop_();_nop_();   
 134   2          }
 135   1      
 136   1      
 137   1      }
 138          /**********************************************
 139          // IIC Write Command
 140          **********************************************/
 141          void Write_IIC_Command(unsigned char IIC_Command)
 142          {
 143   1         IIC_Start();
 144   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 145   1        IIC_Wait_Ack(); 
 146   1         Write_IIC_Byte(0x00);      //write command
 147   1        IIC_Wait_Ack(); 
 148   1         Write_IIC_Byte(IIC_Command); 
 149   1        IIC_Wait_Ack(); 
 150   1         IIC_Stop();
 151   1      }
 152          /**********************************************
 153          // IIC Write Data
 154          **********************************************/
 155          void Write_IIC_Data(unsigned char IIC_Data)
 156          {
 157   1         IIC_Start();
 158   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 159   1        IIC_Wait_Ack(); 
 160   1         Write_IIC_Byte(0x40);      //write data
 161   1        IIC_Wait_Ack(); 
 162   1         Write_IIC_Byte(IIC_Data);
 163   1        IIC_Wait_Ack(); 
 164   1         IIC_Stop();
 165   1      }
 166          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 167          {
 168   1        if(cmd)
 169   1            {
 170   2      
 171   2         Write_IIC_Data(dat);
 172   2         
 173   2          }
 174   1        else {
 175   2         Write_IIC_Command(dat);
 176   2          
 177   2        }
C51 COMPILER V9.60.7.0   OLED                                                              08/01/2024 12:33:12 PAGE 4   

 178   1      
 179   1      
 180   1      }
 181          
 182          /********************************************
 183          // fill_Picture
 184          ********************************************/
 185          void fill_picture(unsigned char fill_Data)
 186          {
 187   1        unsigned char m,n;
 188   1        for(m=0;m<8;m++)
 189   1        {
 190   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 191   2          OLED_WR_Byte(0x00,0);   //low column start address
 192   2          OLED_WR_Byte(0x10,0);   //high column start address
 193   2          for(n=0;n<128;n++)
 194   2            {
 195   3              OLED_WR_Byte(fill_Data,1);
 196   3            }
 197   2        }
 198   1      }
 199          
 200          
 201          /***********************Delay****************************************/
 202          void Delay_50ms(unsigned int Del_50ms)
 203          {
 204   1        unsigned int m;
 205   1        for(;Del_50ms>0;Del_50ms--)
 206   1          for(m=6245;m>0;m--);
 207   1      }
 208          
 209          void Delay_1ms(unsigned int Del_1ms)
 210          {
 211   1        unsigned char j;
 212   1        while(Del_1ms--)
 213   1        { 
 214   2          for(j=0;j<123;j++);
 215   2        }
 216   1      }
 217          
 218          //坐标设置
 219          
 220            void OLED_Set_Pos(unsigned char x, unsigned char y) 
 221          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 222   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 223   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 224   1      }       
 225          //开启OLED显示    
 226          void OLED_Display_On(void)
 227          {
 228   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 229   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 230   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 231   1      }
 232          //关闭OLED显示     
 233          void OLED_Display_Off(void)
 234          {
 235   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 236   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 237   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 238   1      }            
 239          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
C51 COMPILER V9.60.7.0   OLED                                                              08/01/2024 12:33:12 PAGE 5   

 240          void OLED_Clear(void)  
 241          {  
 242   1        u8 i,n;       
 243   1        for(i=0;i<8;i++)  
 244   1        {  
 245   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 246   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 247   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 248   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 249   2        } //更新显示
 250   1      }
 251          void OLED_On(void)  
 252          {  
 253   1        u8 i,n;       
 254   1        for(i=0;i<8;i++)  
 255   1        {  
 256   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 257   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 258   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 259   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 260   2        } //更新显示
 261   1      }
 262          //在指定位置显示一个字符,包括部分字符
 263          //x:0~127
 264          //y:0~63
 265          //mode:0,反白显示;1,正常显示         
 266          //size:选择字体 16/12 
 267          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 268          {       
 269   1        unsigned char c=0,i=0;  
 270   1          c=chr-' ';//得到偏移后的值      
 271   1          if(x>Max_Column-1){x=0;y=y+2;}
 272   1          if(Char_Size ==16)
 273   1            {
 274   2            OLED_Set_Pos(x,y);  
 275   2            for(i=0;i<8;i++)
 276   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 277   2            OLED_Set_Pos(x,y+1);
 278   2            for(i=0;i<8;i++)
 279   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 280   2            }
 281   1            else {  
 282   2              OLED_Set_Pos(x,y);
 283   2              for(i=0;i<6;i++)
 284   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 285   2              
 286   2            }
 287   1      }
 288          //m^n函数
 289          u32 oled_pow(u8 m,u8 n)
 290          {
 291   1        u32 result=1;  
 292   1        while(n--)result*=m;    
 293   1        return result;
 294   1      }         
 295          //显示2个数字
 296          //x,y :起点坐标  
 297          //len :数字的位数
 298          //size:字体大小
 299          //mode:模式 0,填充模式;1,叠加模式
 300          //num:数值(0~4294967295);       
 301          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
C51 COMPILER V9.60.7.0   OLED                                                              08/01/2024 12:33:12 PAGE 6   

 302          {           
 303   1        u8 t,temp;
 304   1        u8 enshow=0;               
 305   1        for(t=0;t<len;t++)
 306   1        {
 307   2          temp=(num/oled_pow(10,len-t-1))%10;
 308   2          if(enshow==0&&t<(len-1))
 309   2          {
 310   3            if(temp==0)
 311   3            {
 312   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 313   4              continue;
 314   4            }else enshow=1; 
 315   3             
 316   3          }
 317   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 318   2        }
 319   1      } 
 320          //显示一个字符号串
 321          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 322          {
 323   1        unsigned char j=0;
 324   1        while (chr[j]!='\0')
 325   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 326   2            x+=8;
 327   2          if(x>120){x=0;y+=2;}
 328   2            j++;
 329   2        }
 330   1      }
 331          //显示汉字
 332          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 333          {               
 334   1        u8 t,adder=0;
 335   1        OLED_Set_Pos(x,y);  
 336   1          for(t=0;t<16;t++)
 337   1          {
 338   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 339   2              adder+=1;
 340   2           }  
 341   1          OLED_Set_Pos(x,y+1);  
 342   1          for(t=0;t<16;t++)
 343   1            { 
 344   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 345   2              adder+=1;
 346   2            }         
 347   1      }
 348          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 349          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 350          {   
 351   1       unsigned int j=0;
 352   1       unsigned char x,y;
 353   1        
 354   1        if(y1%8==0) y=y1/8;      
 355   1        else y=y1/8+1;
 356   1        for(y=y0;y<y1;y++)
 357   1        {
 358   2          OLED_Set_Pos(x0,y);
 359   2          for(x=x0;x<x1;x++)
 360   2            {      
 361   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
C51 COMPILER V9.60.7.0   OLED                                                              08/01/2024 12:33:12 PAGE 7   

 362   3            }
 363   2        }
 364   1      } 
 365          
 366          //初始化SSD1306             
 367          void OLED_Init(void)
 368          {   
 369   1       
 370   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 371   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 372   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 373   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 374   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 375   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 376   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 377   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 378   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 379   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 380   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 381   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 382   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 383   1        OLED_WR_Byte(0x00,OLED_CMD);//
 384   1        
 385   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 386   1        OLED_WR_Byte(0x80,OLED_CMD);//
 387   1        
 388   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 389   1        OLED_WR_Byte(0x05,OLED_CMD);//
 390   1        
 391   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 392   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 393   1        
 394   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 395   1        OLED_WR_Byte(0x12,OLED_CMD);//
 396   1        
 397   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 398   1        OLED_WR_Byte(0x30,OLED_CMD);//
 399   1        
 400   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 401   1        OLED_WR_Byte(0x14,OLED_CMD);//
 402   1        
 403   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 404   1      }  
 405          
 406          
 407          
 408          
 409          
 410          
 411          
 412          
 413          
 414          
 415          
 416          
 417          
 418          
 419          
 420          
 421          
 422          
 423          
C51 COMPILER V9.60.7.0   OLED                                                              08/01/2024 12:33:12 PAGE 8   

 424          
 425          
 426          
 427          
 428          
 429          
 430          
 431          
 432          
 433          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1289    ----
   CONSTANT SIZE    =   2520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
